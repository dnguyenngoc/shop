{"ast":null,"code":"import _objectSpread from \"/home/pot/project/shop/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\n\nvar _this = this,\n    _jsxFileName = \"/home/pot/project/shop/frontend/src/components/charts/charts.js\";\n\nimport React from \"react\";\nimport Chartist from \"react-chartist\";\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\nexport var SalesValueChart = function SalesValueChart() {\n  var data = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    series: [[1, 2, 2, 3, 3, 4, 3]]\n  };\n  var options = {\n    low: 0,\n    showArea: true,\n    fullWidth: true,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: function labelInterpolationFnc(value) {\n        return \"$\".concat(value / 1, \"k\");\n      }\n    }\n  };\n  var plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: data,\n    options: _objectSpread({}, options, {\n      plugins: plugins\n    }),\n    type: \"Line\",\n    className: \"ct-series-g ct-double-octave\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  });\n};\nexport var SalesValueChartphone = function SalesValueChartphone() {\n  var data = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    series: [[1, 2, 2, 3, 3, 4, 3]]\n  };\n  var options = {\n    low: 0,\n    showArea: true,\n    fullWidth: false,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: function labelInterpolationFnc(value) {\n        return \"$\".concat(value / 1, \"k\");\n      }\n    }\n  };\n  var plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: data,\n    options: _objectSpread({}, options, {\n      plugins: plugins\n    }),\n    type: \"Line\",\n    className: \"ct-series-g ct-major-tenth\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  });\n};\nexport var CircleChart = function CircleChart(props) {\n  var _props$series = props.series,\n      series = _props$series === void 0 ? [] : _props$series,\n      _props$donutWidth = props.donutWidth,\n      donutWidth = _props$donutWidth === void 0 ? 20 : _props$donutWidth;\n\n  var sum = function sum(a, b) {\n    return a + b;\n  };\n\n  var options = {\n    low: 0,\n    high: 8,\n    donutWidth: donutWidth,\n    donut: true,\n    donutSolid: true,\n    fullWidth: false,\n    showLabel: false,\n    labelInterpolationFnc: function labelInterpolationFnc(value) {\n      return \"\".concat(Math.round(value / series.reduce(sum) * 100), \"%\");\n    }\n  };\n  var plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: {\n      series: series\n    },\n    options: _objectSpread({}, options, {\n      plugins: plugins\n    }),\n    type: \"Pie\",\n    className: \"ct-golden-section\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 5\n    }\n  });\n};\nexport var BarChart = function BarChart(props) {\n  var _props$labels = props.labels,\n      labels = _props$labels === void 0 ? [] : _props$labels,\n      _props$series2 = props.series,\n      series = _props$series2 === void 0 ? [] : _props$series2,\n      _props$chartClassName = props.chartClassName,\n      chartClassName = _props$chartClassName === void 0 ? \"ct-golden-section\" : _props$chartClassName;\n  var data = {\n    labels: labels,\n    series: series\n  };\n  var options = {\n    low: 0,\n    showArea: true,\n    axisX: {\n      position: 'end'\n    },\n    axisY: {\n      showGrid: false,\n      showLabel: false,\n      offset: 0\n    }\n  };\n  var plugins = [ChartistTooltip()];\n  return /*#__PURE__*/React.createElement(Chartist, {\n    data: data,\n    options: _objectSpread({}, options, {\n      plugins: plugins\n    }),\n    type: \"Bar\",\n    className: chartClassName,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  });\n};","map":{"version":3,"sources":["/home/pot/project/shop/frontend/src/components/charts/charts.js"],"names":["React","Chartist","ChartistTooltip","SalesValueChart","data","labels","series","options","low","showArea","fullWidth","axisX","position","showGrid","axisY","showLabel","labelInterpolationFnc","value","plugins","SalesValueChartphone","CircleChart","props","donutWidth","sum","a","b","high","donut","donutSolid","Math","round","reduce","BarChart","chartClassName","offset"],"mappings":"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","sourcesContent":["\nimport React from \"react\";\nimport Chartist from \"react-chartist\";\nimport ChartistTooltip from 'chartist-plugin-tooltips-updated';\n\nexport const SalesValueChart = () => {\n  const data = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    series: [[1, 2, 2, 3, 3, 4, 3]]\n  };\n\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: true,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={data} options={{...options, plugins}} type=\"Line\" className=\"ct-series-g ct-double-octave\" />\n  );\n};\n\nexport const SalesValueChartphone = () => {\n  const data = {\n    labels: ['Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat', 'Sun'],\n    series: [[1, 2, 2, 3, 3, 4, 3]]\n  };\n\n  const options = {\n    low: 0,\n    showArea: true,\n    fullWidth: false,\n    axisX: {\n      position: 'end',\n      showGrid: true\n    },\n    axisY: {\n      // On the y-axis start means left and end means right\n      showGrid: false,\n      showLabel: false,\n      labelInterpolationFnc: value => `$${value / 1}k`\n    }\n  };\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={data} options={{...options, plugins}} type=\"Line\" className=\"ct-series-g ct-major-tenth\" />\n  );\n};\n\nexport const CircleChart = (props) => {\n  const { series = [], donutWidth = 20 } = props;\n  const sum = (a, b) => a + b;\n\n  const options = {\n    low: 0,\n    high: 8,\n    donutWidth,\n    donut: true,\n    donutSolid: true,\n    fullWidth: false,\n    showLabel: false,\n    labelInterpolationFnc: value => `${Math.round(value / series.reduce(sum) * 100)}%`,\n  }\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={{ series }} options={{...options, plugins}} type=\"Pie\" className=\"ct-golden-section\" />\n  );\n};\n\nexport const BarChart = (props) => {\n  const { labels = [], series = [], chartClassName = \"ct-golden-section\" } = props;\n  const data = { labels, series };\n\n  const options = {\n    low: 0,\n    showArea: true,\n    axisX: {\n      position: 'end'\n    },\n    axisY: {\n      showGrid: false,\n      showLabel: false,\n      offset: 0\n    }\n  };\n\n  const plugins = [\n    ChartistTooltip()\n  ]\n\n  return (\n    <Chartist data={data} options={{...options, plugins}} type=\"Bar\" className={chartClassName} />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}